//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Walter/Documents/IIS2024/Compiladores/ProyectoMini-Python/ProyectoRider/Mini_Python/Mini_Python/compilador/miniPythonParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace parser.generated {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="miniPythonParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IminiPythonParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] miniPythonParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.mainStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMainStatement([NotNull] miniPythonParser.MainStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] miniPythonParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.defStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefStatement([NotNull] miniPythonParser.DefStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgList([NotNull] miniPythonParser.ArgListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] miniPythonParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] miniPythonParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] miniPythonParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] miniPythonParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.printStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStatement([NotNull] miniPythonParser.PrintStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStatement([NotNull] miniPythonParser.AssignStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.functionCallStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallStatement([NotNull] miniPythonParser.FunctionCallStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSequence([NotNull] miniPythonParser.SequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] miniPythonParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison([NotNull] miniPythonParser.ComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.additionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditionExpression([NotNull] miniPythonParser.AdditionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationExpression([NotNull] miniPythonParser.MultiplicationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.elementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementExpression([NotNull] miniPythonParser.ElementExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] miniPythonParser.ExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.primitiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveExpression([NotNull] miniPythonParser.PrimitiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="miniPythonParser.listExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListExpression([NotNull] miniPythonParser.ListExpressionContext context);
}
} // namespace parser.generated
